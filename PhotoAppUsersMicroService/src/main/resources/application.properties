# Assign dynamic port if port is not supplied as argument during startup
server.port=${port:0}

# Application name exposed to other services
spring.application.name=users-ws

# Fully qualified URL by which Eureka clients communicate with Eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka

# Automatically redeploy on code change in Java
spring.devtools.restart.enabled = true

# Uniquely identifies a running Eureka client instance
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Allow H2 console to be accessed
spring.h2.console.enabled = true

# Since we access microservices thro Zuul API Gateway, we need to allow web traffic from gateway
spring.h2.console.settings.web-allow-others=true

# Datasource configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=aas
spring.datasource.password=123
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# IP address of API Gateway
gateway.ip = 192.168.1.6

# JWT properties
jwt.expiration_time=86400
jwt.secret=jhdg8475ofdf9hg809

login.url.path=/users/login

# Command line startup
# mvn spring-boot:run -Dspring-boot.run.arguments=--spring.application.instance_id=aas
# mvn spring-boot:run -Dspring-boot.run.arguments="--spring.application.instance_id=aas2 --port=8899"
